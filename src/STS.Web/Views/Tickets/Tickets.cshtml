@using STS.Web.ViewModels.Tickets;
@using static STS.Common.GlobalConstants;
@model TicketsListViewModel;

@{
    this.ViewData["Title"] = "Tickets";
    this.TempData.Keep("keyword");
    this.ViewData["keyword"] = this.TempData["keyword"];
    string[] keys = new string[] { "my", "to me", "answers", "new", "all", "history" };
}

<article class="ticket-search-art">
    <section>
        <button class="show-create-btn" title="Create a new ticket...">New Ticket</button>
    </section>
    <section class="search-section">
        <form asp-controller="Tickets" asp-action="Tickets" method="get">
            <input class="search-input-field"
                   name="keyword"
                   type="text"
                   value="@(!keys.Contains(this.ViewData["keyword"]) ? this.ViewData["keyword"] : null)"
                   required
                   minlength=2 />
            <button class="search-btn" type="submit">Search</button>
        </form>
    </section>
</article>

<article class="tickets-container">
    <section>
        <vc:tickets-nav-bar></vc:tickets-nav-bar>
    </section>

    <section class="tickets-wrapper">
        <section class="tickets-list">
            @if (Model.TicketsCount > 0)
            {
                <div class="tickets-table">
                    <header class="tickets-table-header">
                        <div class="t-num-header">Ticket</div>
                        <div class="t-num-status">Status</div>
                        <div class="t-num-priority">Prioriry</div>
                        <div class="t-num-title">Title</div>
                        <div class="t-num-created">Date</div>
                        <div class="t-num-assigned">Assigned to</div>
                    </header>

                    @foreach (var ticket in Model.Tickets)
                    {
                        <a class="tickets-table-row" asp-action="Ticket" asp-route-id="@ticket.Id" data-ticket-id="@ticket.Id">
                            <div>@ticket.Id</div>
                            <div><span class="status @ticket.StatusName.ToLower().Replace(" ", "")">@ticket.StatusName</span></div>
                            <div><span class="priority @ticket.PriorityName.ToLower().Replace(" ", "")">@ticket.PriorityName</span></div>
                            <div>@(ticket.Title.Length < 45 ? ticket.Title : $"{ticket.Title.Substring(0, 45)}...")</div>
                            <div>@ticket.CreatedOn.ToString("dd/MM/yy")</div>
                            <div>
                                @(ticket.AssignedToUserName == null
                        ? "unassigned"
                        : ticket.AssignedToUserName )
                            </div>
                        </a>
                    }
                </div>
            }
            else
            {
                <p>No Tickets Currently Available</p>
            }
        </section>

        @if (Model.PagesCount > 1)
        {
            <nav class="page-nav">
                <ul class="page-nav-list">

                    @if (Model.HasPreviousPage)
                    {
                        <li>
                            <a asp-controller="Tickets" asp-action="Tickets" asp-route-page="@Model.PreviousPage" asp-route-keyword="@this.ViewData["keyword"]">Previous</a>
                        </li>
                        <li>
                            <a asp-controller="Tickets" asp-action="Tickets" asp-route-page="@(Model.Page - 1)" asp-route-keyword="@this.ViewData["keyword"]">@(Model.Page - 1)</a>
                        </li>
                    }

                    <li>
                        <a asp-controller="Tickets" asp-action="Tickets" asp-route-page="@Model.Page" asp-route-keyword="@this.ViewData["keyword"]">@Model.Page</a>
                    </li>

                    @if (Model.HasNextPage)
                    {
                        <li>
                            <a asp-controller="Tickets" asp-action="Tickets" asp-route-page="@(Model.Page + 1)" asp-route-keyword="@this.ViewData["keyword"]">@(Model.Page + 1)</a>
                        </li>
                        <li>
                            <a asp-controller="Tickets" asp-action="Tickets" asp-route-page="@Model.NextPage" asp-route-keyword="@this.ViewData["keyword"]">Next</a>
                        </li>
                    }

                </ul>
            </nav>
        }
    </section>

    <aside class="tasks-review">
        <p class="daily-tasks">Daily tasks</p>
        <vc:tasks-side-bar></vc:tasks-side-bar>
    </aside>
</article>

<dialog class="create-dialog">
    <vc:create-ticket></vc:create-ticket>
</dialog>

@section Scripts {
    <script type="module" src="~/js/services/create-ticket-dialog-service.js"></script>
    <script type="module" src="~/js/services/create-ticket-validation.js"></script>
}
