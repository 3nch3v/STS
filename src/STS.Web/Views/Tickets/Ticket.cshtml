@using STS.Web.ViewModels.Tickets;
@model TicketViewModel;
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@{
    ViewData["Title"] = Model.Title;
    ViewData["ticketId"] = Model.Id;
    var requestToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
    ViewData["requestToken"] = requestToken;
}

<article class="ticket-search-art">
    <section>
        <button class="show-create-btn" title="Create a new ticket...">New Ticket</button>
    </section>
    <section class="search-section">
        <form asp-controller="Tickets" asp-action="Tickets" method="get">
            <input class="search-input-field"
                   name="keyword"
                   type="text"
                   required
                   minlength=2 />
            <button class="search-btn" type="submit">Search</button>
        </form>
    </section>
</article>

<article class="tickets-container">

    <vc:tickets-nav-bar></vc:tickets-nav-bar>

    <section class="ticket-wrapper">

        <section class="ticket" data-ticket-id="@Model.Id" data-request-token="@requestToken">
            <section class="ticket-details">

                <section class="ticket-details-title">

                    <section class="tile-status-priority">
                        <span class="status @Model.StatusName.ToLower().Replace(" ", "")">@Model.StatusName</span>
                        <span class="priority @Model.PriorityName.ToLower().Replace(" ", "")">@Model.PriorityName</span>
                    </section>




                    <section class='t-title-section'>
                        <section class='t-title'>
                            <p class="ticket-title">@Model.Title</p>
                        </section>

                        @if (Model.IsOwner)
                        {
                            <section class="edit-title-section">
                                <a class="edit-t-title" href="javascript.void(0)">
                                    <i class="fa fa-edit"></i>
                                </a>
                            </section>
                        }
                    </section>

                    <section class='t-title-section-edited'></section>

                </section>



                <section class="ticket-body-section">
                    <section class="ticket-content-section">
                        <p class="ticket-content">@Model.Content</p>
                    </section>

                    @if (Model.IsOwner)
                    {
                        <section class="edit-content-section">
                            <a class="edit-t-content" href="javascript.void(0)">
                                <i class="fa fa-edit"></i>
                            </a>
                        </section>
                    }
                </section>

                <section class="t-content-section-edited"></section>

                <section>
                    from
                    <span class="username">@Model.EmployeeUserName</span>
                    on
                    <span class="date">@Model.CreatedOn</span>
                </section>

            </section>




            <section class="ticket-actions">
                <select class="form-control-sm t-status-select"
                        asp-items="Model.Statuses.Where(x => x.Name != Model.StatusName).Select(x => new SelectListItem(x.Name, x.Id.ToString()))">
                    <option selected="selected" value="@Model.StatusId">@Model.StatusName</option>
                </select>

                <select class="form-control-sm t-department-select"
                        asp-items="Model.Departments.Where(x => x.Name != Model.DepartmentName).Select(x => new SelectListItem(x.Name, x.Id.ToString()))">
                    <option selected="selected" value="@Model.DepartmentId">@Model.DepartmentName</option>
                </select>

                <select class="form-control-sm t-assign-select"
                        asp-items="Model.Employees.Where(x => x.UserName != Model.AssignedToUserName).Select(x => new SelectListItem(x.UserName, x.Id))">
                    <option selected="selected" value="@Model.AssignedToId">@(Model.AssignedToUserName ?? "Select user")</option>
                </select>

                <ul class="actions">
                    @if (Model.AssignedToId != Model.LoggedInUserId)
                    {
                        <li>
                            <a href="javascript.void(0)"
                           type="button"
                           class="assign-to-me-btn"
                           data-my-id="@Model.LoggedInUserId">
                                Assign to me
                            </a>
                        </li>
                    }
                    @if (Model.IsOwner)
                    {
                        <li>
                            <a asp-controller="Tickets"
                           asp-action="Delete"
                           asp-route-id="@Model.Id">
                                Delete
                            </a>
                        </li>
                    }
                    <li>
                        <p class="assigned-to-username">
                            @(Model.AssignedToUserName == null
                            ? "unassigned"
                            : $"Assigned to {Model.AssignedToUserName}")
                        </p>
                    </li>
                </ul>
            </section>
        </section>

        <section class="ticket-comments">
            @foreach (var comment in Model.Comments)
            {
                <section class="t-comment">
                    <p>@comment.Content</p>

                    <div class="comment-actions">
                        <div>
                            <span>
                                from
                                <span class="username">@comment.UserUserName</span>
                                on
                                <span class="date">@comment.CreatedOn</span>
                            </span>
                        </div>
                        <div>
                            @if (Model.LoggedInUserId == comment.UserId)
                            {
                                <button class="c-del-btn"
                                title="Delete comment."
                                data-comment-id="@comment.Id"
                                data-request-token="@requestToken">
                                    <i class="fa fa-trash"></i>
                                </button>
                            }
                        </div>

                    </div>
                </section>
            }
        </section>

        <section>
            <button class="t-comment-btn">Comment</button>
        </section>

    </section>

    <aside class="tasks-review">
        <p class="daily-tasks">Daily tasks</p>
        <vc:tasks-side-bar></vc:tasks-side-bar>
    </aside>

</article>

<dialog class="create-dialog">
    <vc:create-ticket></vc:create-ticket>
</dialog>

<dialog class="comment-dialog">
    <partial name="_CommentFormPartial" view-data="ViewData"></partial>
</dialog>

@section Scripts {
<script type="module" src="~/js/services/create-ticket-dialog-service.js"></script>
<script type="module" src="~/js/services/comments-services.js"></script>
<script type="module" src="~/js/services/tickets-services.js"></script>
<script type="module" src="~/js/services/create-ticket-validation.js"></script>
}
