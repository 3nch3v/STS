@using STS.Web.ViewModels.Tasks;

@model TasksViewModel;

@{
    this.ViewData["Title"] = "My tasks";
    this.ViewData["Keyword"] = @Model.Keyword;
}

<article class="tasks-wrapper">
    <partial name="_TaskSideBar" view-data="this.ViewData" />

    <section class="tasks-table-wrapper">
        <partial name="_TasksTable" model="Model"/>

        <section class="pagination">
            @if (Model.PagesCount > 1)
            {
                <nav class="page-nav">
                    <ul class="page-nav-list">
                        @if (Model.HasPreviousPage)
                        {
                            <li>
                                <a asp-controller="Tasks"
                                   asp-action="Index"
                                   asp-route-page="@Model.PreviousPage"
                                   asp-route-isActive="@Model.OnlyActive"
                                   asp-route-keyword="@Model.Keyword"
                                >
                                            Previous
                                </a>
                            </li>
                            <li>
                                <a asp-controller="Tasks"
                                   asp-action="Index"
                                   asp-route-page="@(Model.Page - 1)"
                                   asp-route-isActive="@Model.OnlyActive"
                                   asp-route-keyword="@Model.Keyword"
                                >
                                            @(Model.Page - 1)
                                </a>
                            </li>
                        }

                        <li>
                            <a asp-controller="Tasks"
                               asp-action="Index"
                               asp-route-page="@Model.Page"
                               asp-route-isActive="@Model.OnlyActive"
                               asp-route-keyword="@Model.Keyword"
                            >
                                    @Model.Page
                            </a>
                        </li>

                        @if (Model.HasNextPage)
                        {
                            <li>
                                <a asp-controller="Tasks"
                                   asp-action="Index"
                                   asp-route-page="@(Model.Page + 1)"
                                   asp-route-isActive="@Model.OnlyActive"
                                   asp-route-keyword="@Model.Keyword"
                                >
                                            @(Model.Page + 1)
                                </a>
                            </li>
                            <li>
                                <a asp-controller="Tasks"
                                   asp-action="Index"
                                   asp-route-page="@Model.NextPage"
                                   asp-route-isActive="@Model.OnlyActive"
                                   asp-route-keyword="@Model.Keyword"
                                >
                                            Next
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        </section>
    </section>
</article>