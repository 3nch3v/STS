@using STS.Web.ViewModels.Tasks;
@using static STS.Common.GlobalConstants;
@model TasksViewModel;

@{
    this.ViewData["Title"] = "My tasks";
    this.ViewData["Keyword"] = @Model.Keyword;
}

<article class="tasks-wrapper"> 
    <partial name="_TaskSideBar" view-data=this.ViewData />

    <section class="tasks-table-wrapper">
        <section class="tasks-table">
            @if (Model.TasksCount > 0)
            {
                <div class="tickets-table">

                    <header class="tickets-table-header">
                        <div class="table-task-number">Task</div>
                        <div class="table-status">Status</div>
                        <div class="table-priority">Prioriry</div>
                        <div class="table-t-title">Title</div>
                        <div class="table-assigned-to">Manager</div>
                        <div class="task-deadline">Deadline</div>
                    </header>

                    @foreach (var task in Model.Tasks)
                    {
                        <a class="tickets-table-row"
                           asp-controller="Tasks"
                           asp-action="Task"
                           asp-route-id="@task.Id"
                        >
                            <div>@task.Id</div>
                            <div>
                                <span class="status @task.StatusName.ToLower().Replace(" ", "")">@task.StatusName</span>
                            </div>
                            <div>
                                <span class="priority @task.PriorityName.ToLower().Replace(" ", "")">@task.PriorityName</span>
                            </div>
                            <div class="table-t-title">@task.Title</div>
                            <div>@task.ManagerUserName </div>
                            <div>@task.Deadline.ToString("dd/MM/yy hh:MM")</div>
                        </a>
                    }
                </div>
            }
            else
            {
                <p>Take a Coffee. You have no pendding tasks.</p>
            }
        </section>

        <section class="pagination">
            @if (Model.PagesCount > 1)
            {
                <nav class="page-nav">
                    <ul class="page-nav-list">

                        @if (Model.HasPreviousPage)
                        {
                            <li>
                                <a asp-controller="Tasks"
                                   asp-action="Index"
                                   asp-route-page="@Model.PreviousPage"
                                   asp-route-isActive="@Model.OnlyActive"
                                   asp-route-keyword="@Model.Keyword">
                                            Previous
                                </a>
                            </li>
                            <li>
                                <a asp-controller="Tasks"
                                   asp-action="Index"
                                   asp-route-page="@(Model.Page - 1)"
                                   asp-route-isActive="@Model.OnlyActive"
                                   asp-route-keyword="@Model.Keyword">
                                            @(Model.Page - 1)
                                </a>
                            </li>
                        }

                        <li>
                            <a asp-controller="Tasks"
                               asp-action="Index"
                               asp-route-page="@Model.Page"
                               asp-route-isActive="@Model.OnlyActive"
                               asp-route-keyword="@Model.Keyword">
                                    @Model.Page
                            </a>
                        </li>

                        @if (Model.HasNextPage)
                        {
                            <li>
                                <a asp-controller="Tasks"
                                   asp-action="Index"
                                   asp-route-page="@(Model.Page + 1)"
                                   asp-route-isActive="@Model.OnlyActive"
                                   asp-route-keyword="@Model.Keyword">
                                            @(Model.Page + 1)
                                </a>
                            </li>
                            <li>
                                <a asp-controller="Tasks"
                                   asp-action="Index"
                                   asp-route-page="@Model.NextPage"
                                   asp-route-isActive="@Model.OnlyActive"
                                   asp-route-keyword="@Model.Keyword">
                                            Next
                                </a>
                            </li>
                        }

                    </ul>
                </nav>
            }
        </section>
    </section>
</article>