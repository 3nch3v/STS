@using STS.Web.ViewModels.Tasks;
@model TasksViewModel;

<h1>Employee</h1>

<section>
    <form method="post" asp-controller="Tasks" asp-action="Index">
        <div>
            <input name="keyword"
                   type="text"
                   value="@Model.Keyword">
        </div>
        <div>
            <input id="isActive"
                   name="isActive"
                   type="checkbox"
                   value="true" />
            <label for="isActive"> Only active tasks</label>
        </div>
        <div>
            <button type="submit">Show</button>
        </div>
    </form>
</section>

<section>
    <section>
        @foreach (var task in Model.Tasks)
        {
            <a asp-controller="Tasks" asp-action="Task" asp-route-id="@task.Id">
                <p>@task.Id =>  @task.PriorityName => @task.Title => @task.StatusName => @task.ManagerUserName => @task.Deadline</p>
            </a>
        }
    </section>

    <section>
        @if (Model.PagesCount > 1)
        {
            <nav class="page-nav">
                <ul class="page-nav-list">

                    @if (Model.HasPreviousPage)
                    {
                        <li>
                            <a asp-controller="Tasks"
                       asp-action="Index"
                       asp-route-page="@Model.PreviousPage"
                       asp-route-isActive="@Model.OnlyActive"
                       asp-route-keyword="@Model.Keyword">
                                Previous
                            </a>
                        </li>
                        <li>
                            <a asp-controller="Tasks"
                       asp-action="Index"
                       asp-route-page="@(Model.Page - 1)"
                       asp-route-isActive="@Model.OnlyActive"
                       asp-route-keyword="@Model.Keyword">
                                @(Model.Page - 1)
                            </a>
                        </li>
                    }

                    <li>
                        <a asp-controller="Tasks"
                       asp-action="Index"
                       asp-route-page="@Model.Page"
                       asp-route-isActive="@Model.OnlyActive"
                       asp-route-keyword="@Model.Keyword">
                            @Model.Page
                        </a>
                    </li>

                    @if (Model.HasNextPage)
                    {
                        <li>
                            <a asp-controller="Tasks"
                       asp-action="Index"
                       asp-route-page="@(Model.Page + 1)"
                       asp-route-isActive="@Model.OnlyActive"
                       asp-route-keyword="@Model.Keyword">
                                @(Model.Page + 1)
                            </a>
                        </li>
                        <li>
                            <a asp-controller="Tasks"
                       asp-action="Index"
                       asp-route-page="@Model.NextPage"
                       asp-route-isActive="@Model.OnlyActive"
                       asp-route-keyword="@Model.Keyword">
                                Next
                            </a>
                        </li>
                    }

                </ul>
            </nav>
        }
    </section>
</section>

<section>
    <h3>Next expiring tasks</h3>
    <vc:tasks-side-bar is-manager=false></vc:tasks-side-bar>
</section>