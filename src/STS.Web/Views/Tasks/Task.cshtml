@using System.Security.Claims;
@using STS.Web.ViewModels.Tasks;
@model TaskViewModel;
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@{
    this.ViewData["Title"] = "Task details";
    var requestToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
    bool isManager = User.IsInRole(AdministratorRoleName) || User.IsInRole(ManagerRoleName);
    string currUserId = User.FindFirst(ClaimTypes.NameIdentifier).Value;
    bool isOwnTask = Model.ManagerId == currUserId;
}

<article class="task-wrapper">
    <partial name="_TaskSideBar" view-data=null />

    <section class="task-details" data-task-id="@Model.Id" data-request-token="@requestToken">
        <section class="task-actions">
            <div>
                <select class="task-status-select"
                        asp-items="@Model.Statuses
                                .Where(x => x.Name.ToLower() != Model.StatusName.ToLower())
                                .Select(x => new SelectListItem(x.Name, x.Id.ToString()))">
                    <option class="status pending"
                            selected="selected"
                            value="@(Model.Statuses
                                          .Where(x => x.Name.ToLower() == Model.StatusName.ToLower())
                                          .Select(x => x.Id)
                                          .FirstOrDefault())">
                        @Model.StatusName
                    </option>
                </select>

                @if (isManager && isOwnTask)
                {
                    <select class="t-employee-select"
                        asp-items="@Model.Employees
                                .Where(x => x.UserName != Model.EmployeeUserName)
                                .Select(x => new SelectListItem(x.UserName, x.Id))">
                        <option selected="selected"
                            value="@(Model.Employees
                                            .FirstOrDefault(x => x.UserName == Model.EmployeeUserName)
                                            .Id)">
                            @Model.EmployeeUserName
                        </option>
                    </select>
                }
            </div>
            @if (isManager && isOwnTask)
            {
                <div>
                    <a asp-controller="Tasks"
                       asp-action="Delete"
                       asp-route-id="@Model.Id"
                       class="t-delete-btn"
                    >
                        <i class="fa fa-trash fa-lg"></i>
                    </a>
                </div>
            }
        </section>

        <section class="task-info">
            <div class="task-s-p-d">
                <p class="status @Model.StatusName.Replace(" ", "").ToLower()">@Model.StatusName</p>
                <p class="priority @Model.PriorityName.Replace(" ", "").ToLower()">@Model.PriorityName</p>
                <p class="deadline">@Model.Deadline</p>
            </div>
            <section>
                <h5>@Model.Title</h5>
                <p>@Model.Description</p>
                <p class="task-manager username"><span class="from-user">from</span> @Model.ManagerUserName</p>
            </section>
        </section>
    </section>

    <partial name="_TaskComments" model="Model"></partial>
</article>

@section Scripts{
<script type="module" src="~/js/services/tasks-services.js"></script>
}