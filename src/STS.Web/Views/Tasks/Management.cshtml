@using STS.Web.ViewModels.Tasks;
@model TasksViewModel;

@{
    this.ViewData["Title"] = "Tasks management";
}

<article class="m-tasks-wrapper">
    <section class="tasks-side-bar-section">
        <section>
            <button class="create-task-btn" title="Create a new task...">New Task</button>
        </section>
        <vc:management-task-search keyword="@Model.Keyword" manager-id="@Model.ManagerId"></vc:management-task-search>
        <vc:tasks-side-bar is-manager=true tasks-count=TasksSideBarCount></vc:tasks-side-bar>
    </section>

    <section class="tasks-table-wrapper">

        <partial name="_TasksTable" model="Model" />

        <section class="pagination">
            @if (Model.PagesCount > 1)
            {
                <nav class="page-nav">
                    <ul class="page-nav-list">

                        @if (Model.HasPreviousPage)
                        {
                            <li>
                                <a asp-controller="Tasks"
                                   asp-action="Management"
                                   asp-route-page="@Model.PreviousPage"
                                   asp-route-isActive="@Model.OnlyActive"
                                   asp-route-keyword="@Model.Keyword"
                                >
                                     Previous
                                </a>
                            </li>
                            <li>
                                <a asp-controller="Tasks"
                                   asp-action="Management"
                                   asp-route-page="@(Model.Page - 1)"
                                   asp-route-isActive="@Model.OnlyActive"
                                   asp-route-keyword="@Model.Keyword"
                                >
                                    @(Model.Page - 1)
                                </a>
                            </li>
                        }

                        <li>
                            <a asp-controller="Tasks"
                               asp-action="Management"
                               asp-route-page="@Model.Page"
                               asp-route-isActive="@Model.OnlyActive"
                               asp-route-keyword="@Model.Keyword"
                            >
                                @Model.Page
                            </a>
                        </li>

                        @if (Model.HasNextPage)
                        {
                            <li>
                                <a asp-controller="Tasks"
                                   asp-action="Management"
                                   asp-route-page="@(Model.Page + 1)"
                                   asp-route-isActive="@Model.OnlyActive"
                                   asp-route-keyword="@Model.Keyword"
                                >
                                    @(Model.Page + 1)
                                </a>
                            </li>
                            <li>
                                <a asp-controller="Tasks"
                                   asp-action="Management"
                                   asp-route-page="@Model.NextPage"
                                   asp-route-isActive="@Model.OnlyActive"
                                   asp-route-keyword="@Model.Keyword"
                                >
                                    Next
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        </section>

    </section>

</article>

<dialog class="create-task-dialog">
    <vc:create-task></vc:create-task>
</dialog>

@section Scripts {
<script type="module" src="~/js/services/create-task-dialog.js"></script>
} 